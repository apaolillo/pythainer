@inproceedings{nvblox,
  title        = {{nvblox: GPU-Accelerated Incremental Signed Distance Field Mapping}},
  author       = {Millane, Alexander and Oleynikova, Helen and Wirbel, Emilie and Steiner, Remo and Ramasamy, Vikram and Tingdahl, David and Siegwart, Roland},
  year         = 2024,
  booktitle    = {2024 IEEE International Conference on Robotics and Automation (ICRA)},
  volume       = {},
  number       = {},
  pages        = {2698--2705},
  doi          = {10.1109/ICRA57147.2024.10611532},
  keywords     = {Surface reconstruction;Navigation;Graphics processing units;Libraries;Path planning;Hardware;Low latency communication}
}

@inproceedings{robotcore,
  title        = {{RobotCore: An Open Architecture for Hardware Acceleration in ROS 2}},
  author       = {Mayoral-Vilches, Víctor and Neuman, Sabrina M. and Plancher, Brian and Reddi, Vijay Janapa},
  year         = 2022,
  booktitle    = {2022 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)},
  volume       = {},
  number       = {},
  pages        = {9692--9699},
  doi          = {10.1109/IROS47612.2022.9982082},
  keywords     = {Computer architecture;Benchmark testing;Software;Real-time systems;Workstations;Time factors;Robots}
}

@inproceedings{tani2020reproducible,
  title        = {{Integrated Benchmarking and Design for Reproducible and Accessible Evaluation of Robotic Agents}},
  author       = {Tani, Jacopo and Daniele, Andrea F. and Bernasconi, Gianmarco and Camus, Amaury and Petrov, Aleksandar and Courchesne, Anthony and Mehta, Bhairav and Suri, Rohit and Zaluska, Tomasz and Walter, Matthew R. and Frazzoli, Emilio and Paull, Liam and Censi, Andrea},
  year         = 2020,
  booktitle    = {2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)},
  volume       = {},
  number       = {},
  pages        = {6229--6236},
  doi          = {10.1109/IROS45743.2020.9341677},
  keywords     = {Benchmark testing;Tools;Hardware;Software;Complexity theory;Robots;System analysis and design}
}

@article{macenski2022ros2,
  title        = {{Robot Operating System 2: Design, architecture, and uses in the wild}},
  author       = {Steven Macenski  and Tully Foote  and Brian Gerkey  and Chris Lalancette  and William Woodall},
  year         = 2022,
  journal      = {Science Robotics},
  volume       = 7,
  number       = 66,
  pages        = {eabm6074},
  doi          = {10.1126/scirobotics.abm6074},
  url          = {https://www.science.org/doi/abs/10.1126/scirobotics.abm6074},
  eprint       = {https://www.science.org/doi/pdf/10.1126/scirobotics.abm6074}
}

@manual{nvidiaCudaPg13,
  title        = {{CUDA C++ Programming Guide}},
  year         = 2025,
  note         = {Version 13.0},
  organization = {NVIDIA Corporation},
  howpublished = {\url{https://docs.nvidia.com/cuda/cuda-c-programming-guide/}, accessed 2025-09-15}
}

@misc{qemu,
  title        = {{QEMU: A generic and open source machine emulator and virtualizer}},
  author       = {{QEMU Project}},
  year         = 2003,
  howpublished = {\url{https://www.qemu.org/} accessed 2025-09-15}
}

@misc{docker,
  title        = {{Docker: Accelerated Container Application Development}},
  author       = {{Docker, Inc.}},
  year         = 2013,
  howpublished = {\url{https://www.docker.com/} accessed 2025-09-15}
}

@inproceedings{llvm,
  title        = {{LLVM: a compilation framework for lifelong program analysis & transformation}},
  author       = {Lattner, C. and Adve, V.},
  year         = 2004,
  booktitle    = {International Symposium on Code Generation and Optimization, 2004. CGO 2004.},
  volume       = {},
  number       = {},
  pages        = {75--86},
  doi          = {10.1109/CGO.2004.1281665},
  keywords     = {Information analysis;Program processors;Performance analysis;High level languages;Virtual machining;Runtime;Arithmetic;Application software;Software safety;Algorithm design and analysis}
}

@inproceedings{mlir,
  title        = {{MLIR: Scaling Compiler Infrastructure for Domain Specific Computation}},
  author       = {Lattner, Chris and Amini, Mehdi and Bondhugula, Uday and Cohen, Albert and Davis, Andy and Pienaar, Jacques and Riddle, River and Shpeisman, Tatiana and Vasilache, Nicolas and Zinenko, Oleksandr},
  year         = 2021,
  booktitle    = {2021 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)},
  volume       = {},
  number       = {},
  pages        = {2--14},
  doi          = {10.1109/CGO51591.2021.9370308},
  keywords     = {Program processors;Buildings;Semantics;Hardware;Software;Generators;Optimization}
}

@inproceedings{shen2025sentryrt1,
  title        = {{SentryRT‑1: A Case Study in Evaluating Real‑Time Linux for Safety‑Critical Robotic Perception}},
  author       = {Yuwen Shen and Jorrit Vander Mynsbrugge and Nima Roshandel and Robin Bouchez and Hamed FirouziPouyaei and Constantin Scholz and Hoang‑Long Cao and Bram Vanderborght and Wouter Joosen and Antonio Paolillo},
  year         = 2025,
  month        = {July 8},
  booktitle    = {Proceedings of the 19th Workshop on Operating Systems Platforms for Embedded Real‑Time Applications (OSPERT 2025)},
  address      = {Brussels, Belgium},
  series       = {ECRTS Workshops},
  pages        = {35--41}
}

@misc{itf24safebot,
  title        = {{imec ITF World 2024 SAFEBOT demo}},
  year         = 2024,
  note         = {Demonstration booth at imec Technology Forum (ITF) 2024},
  howpublished = {\url{https://www.youtube.com/watch?v=F7m5_kQ_mRQ} accessed 2025-09-15}
}

@inproceedings{degreef2025macros,
  title        = {{Towards Macro-Aware C-to-Rust Transpilation (WIP)}},
  author       = {De Greef, Robbe and Discepoli, Attilio and Aguililla Klein, Esteban and Engels, Th\'{e}o and Hasselmann, Ken and Paolillo, Antonio},
  year         = 2025,
  booktitle    = {Proceedings of the 26th ACM SIGPLAN/SIGBED International Conference on Languages, Compilers, and Tools for Embedded Systems},
  location     = {Seoul, Republic of Korea},
  publisher    = {Association for Computing Machinery},
  address      = {New York, NY, USA},
  series       = {LCTES '25},
  pages        = {57–61},
  doi          = {10.1145/3735452.3735535},
  isbn         = 9798400719219,
  url          = {https://doi.org/10.1145/3735452.3735535},
  abstract     = {The automatic translation of legacy C code to Rust presents significant challenges, particularly in handling preprocessor macros.   C macros introduce metaprogramming constructs that operate at the text level, outside of C's syntax tree, making their direct translation to Rust non-trivial.   Existing transpilers --- source-to-source compilers --- expand macros before translation, sacrificing their abstraction and reducing code maintainability.   In this work, we introduce Oxidize, a macro-aware C-to-Rust transpilation framework that preserves macro semantics by translating C macros into Rust-compatible constructs while selectively expanding only those that interfere with Rust's stricter semantics.  We evaluate our techniques on a small-scale study of real-world macros and find that the majority can be safely and idiomatically transpiled without full expansion.},
  numpages     = 5,
  keywords     = {Abstract Syntax Tree, C, Embedded, Macros, Metaprogramming, Preprocessor, Rust, Transpilation}
}

@inproceedings{discepoli2025computeKernels,
  title        = {{Compute Kernels as Moldable Tasks: Towards Real‑Time Gang Scheduling in GPUs}},
  author       = {Attilio Discepoli and Mathias Louis Huygen and Antonio Paolillo},
  year         = 2025,
  month        = {July 8},
  booktitle    = {Proceedings of the 19th Workshop on Operating Systems Platforms for Embedded Real‑Time Applications (OSPERT 2025)},
  address      = {Brussels, Belgium},
  series       = {ECRTS Workshops},
  pages        = {29--33}
}

@misc{docker_compose,
  title        = {{Docker Compose}},
  author       = {{Docker, Inc.}},
  year         = 2014,
  howpublished = {\url{https://docs.docker.com/compose/} accessed 2025-09-15}
}

@misc{docker_sdk_python,
  title        = {{Docker SDK for Python}},
  author       = {{Docker, Inc.}},
  year         = 2014,
  howpublished = {\url{https://docker-py.readthedocs.io/} accessed 2025-09-15}
}

@misc{devcontainers,
  title        = {{Development Containers Specification}},
  author       = {{Dev Containers Spec}},
  year         = 2022,
  howpublished = {\url{https://containers.dev} accessed 2025-09-15}
}

@misc{repo2docker,
  title        = {{repo2docker: Turn repositories into Jupyter-enabled Docker images}},
  author       = {{Project Jupyter}},
  year         = 2017,
  howpublished = {\url{https://repo2docker.readthedocs.io/} accessed 2025-09-15}
}

@inproceedings{nix04lisa,
  title        = {{Nix: A Safe and Policy-Free System for Software Deployment}},
  author       = {Dolstra, Eelco and de Jonge, Merijn and Visser, Eelco},
  year         = 2004,
  booktitle    = {Proceedings of the 18th USENIX Conference on System Administration},
  location     = {Atlanta, GA},
  publisher    = {USENIX Association},
  address      = {USA},
  series       = {LISA '04},
  pages        = {79–92},
  abstract     = {Existing systems for software deployment are neither safe nor sufficiently flexible. Primary safety issues are the inability to enforce reliable specification of component dependencies, and the lack of support for multiple versions or variants of a component. This renders deployment operations such as upgrading or deleting components dangerous and unpredictable. A deployment system must also be flexible (i.e., policy-free) enough to support both centralised and local package management, and to allow a variety of mechanisms for transferring components. In this paper we present Nix, a deployment system that addresses these issues through a simple technique of using cryptographic hashes to compute unique paths for component instances.},
  numpages     = 14
}

@misc{courtes2013guix,
  title        = {{Functional Package Management with Guix}},
  author       = {Ludovic Courtès},
  year         = 2013,
  url          = {https://arxiv.org/abs/1305.4584},
  eprint       = {1305.4584},
  archiveprefix = {arXiv},
  primaryclass = {cs.PL}
}

@article{ritchie2020caliban,
  title        = {{Caliban: Docker-based job manager for reproducible workflows}},
  author       = {Ritchie, Sam and Slone, Ambrose and Ramasesh, Vinay},
  year         = 2020,
  journal      = {Journal of Open Source Software},
  publisher    = {The Open Journal},
  volume       = 5,
  number       = 53,
  pages        = 2403,
  doi          = {10.21105/joss.02403},
  url          = {https://doi.org/10.21105/joss.02403}
}

@article{viereck2019x11docker,
  title        = {{x11docker: Run GUI applications in Docker containers}},
  author       = {Viereck, Martin},
  year         = 2019,
  journal      = {Journal of Open Source Software},
  publisher    = {The Open Journal},
  volume       = 4,
  number       = 37,
  pages        = 1349,
  doi          = {10.21105/joss.01349},
  url          = {https://doi.org/10.21105/joss.01349}
}
